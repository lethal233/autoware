name: docker-build-and-push
description: ""

inputs:
  bake-target:
    description: ""
    required: true
  build-args:
    description: ""
    required: false
  tag-prefix:
    description: ""
    required: false
  tag-suffix:
    description: ""
    required: false

runs:
  using: composite
  steps:
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install jq
      run: |
        sudo apt-get -y update
        sudo apt-get -y install jq
      shell: bash

    # workflow_dispatch: latest, release_version
    # schedule: date
    - name: Set Docker tags
      id: set-docker-tags
      run: |
        tags=()
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.publish_packages }}" == "true" ]; then
                tags+=("${{ github.event.inputs.release_version }}")
                tags+=("latest")
            fi
        else
            tags+=("latest")
        fi
        tags+=("{{date 'YYYYMMDD'}}")

        # Output multiline strings: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "tags<<$EOF" >> $GITHUB_OUTPUT
        echo "$(printf "%s\n" "${tags[@]}")" >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT
      shell: bash

    - name: Docker meta for prebuilt
      id: meta-prebuilt
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ inputs.bake-target }}
        tags: ${{ steps.set-docker-tags.outputs.tags }}
        bake-target: docker-metadata-action-prebuilt
        flavor: |
          latest=false
          suffix=-prebuilt${{ inputs.tag-suffix }}

    - name: Docker meta for devel
      id: meta-devel
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ inputs.bake-target }}
        tags: ${{ steps.set-docker-tags.outputs.tags }}
        bake-target: docker-metadata-action-devel
        flavor: |
          latest=false
          suffix=-devel${{ inputs.tag-suffix }}

    - name: Docker meta for runtime
      if: ${{ github.event_name == 'workflow_dispatch' }}
      id: meta-runtime
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ inputs.bake-target }}
        tags: ${{ steps.set-docker-tags.outputs.tags }}
        bake-target: docker-metadata-action-runtime
        flavor: |
          latest=${{ github.event.inputs.publish_packages }}
          suffix=-runtime${{ inputs.tag-suffix }}

    - name: Login to GitHub Container Registry
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    - name: Build and Push prebuilt and devel
      if: ${{ github.event_name != 'workflow_dispatch' }}
      uses: docker/bake-action@v3
      with:
        # Checking event_name for https://github.com/autowarefoundation/autoware/issues/2796
        push: true
        files: |
          docker/${{ inputs.bake-target }}/docker-bake.hcl
          ${{ steps.meta-prebuilt.outputs.bake-file }}
          ${{ steps.meta-devel.outputs.bake-file }}
        targets: |
          prebuilt
          devel
        provenance: false
        set: |
          ${{ inputs.build-args }}

    - name: Build and Publish Release to GitHub Container Registry
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.publish_packages }}
      uses: docker/bake-action@v3
      with:
        push: true
        files: |
          docker/${{ inputs.bake-target }}/docker-bake.hcl
          ${{ steps.meta-devel.outputs.bake-file }}
          ${{ steps.meta-prebuilt.outputs.bake-file }}
          ${{ steps.meta-runtime.outputs.bake-file }}
        provenance: false
        set: |
          ${{ inputs.build-args }}
    
    - name: Build and Save Artifacts
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.publish_packages != true}}
      uses: docker/bake-action@v3
      with:
        push: false
        files: |
          docker/${{ inputs.bake-target }}/docker-bake.hcl
          ${{ steps.meta-devel.outputs.bake-file }}
          ${{ steps.meta-prebuilt.outputs.bake-file }}
          ${{ steps.meta-runtime.outputs.bake-file }}
        provenance: false
        set: |
          ${{ inputs.build-args }}
          prebuilt.output=type=docker,dest=/tmp/prebuilt.tar
          devel.output=type=docker,dest=/tmp/devel.tar
          runtime.output=type=docker,dest=/tmp/runtime.tar

    - name: Upload Artifacts
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.publish_packages != true }}
      uses: actions/upload-artifact@v4
      with:
        name: docker-images
        path: /tmp/*.tar
        retention-days: 7
        compression-level: 6
        overwrite: true
        if-no-files-found: error